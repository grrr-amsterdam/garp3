[production]

; GARP ROUTES

routes.auth_register.route = "/g/auth/register"
routes.auth_register.defaults.controller = auth
routes.auth_register.defaults.module = g
routes.auth_register.defaults.action = register

routes.auth_login.route = "/g/auth/login"
routes.auth_login.defaults.controller = auth
routes.auth_login.defaults.module = g
routes.auth_login.defaults.action = login

routes.auth_logout.route = "/g/auth/logout"
routes.auth_logout.defaults.controller = auth
routes.auth_logout.defaults.module = g
routes.auth_logout.defaults.action = logout

routes.auth_submit.route = "/g/auth/login/process/:method"
routes.auth_submit.defaults.controller = auth
routes.auth_submit.defaults.module = g
routes.auth_submit.defaults.action = process
routes.auth_submit.defaults.method = null

routes.auth_validate_email.route = "/g/auth/validateemail/*"
routes.auth_validate_email.defaults.controller = auth
routes.auth_validate_email.defaults.action = validateemail
routes.auth_validate_email.defaults.module = g

routes.auth_send_validate_email.route = "/g/auth/sendvalidateemail"
routes.auth_send_validate_email.defaults.controller = auth
routes.auth_send_validate_email.defaults.action = sendvalidateemail
routes.auth_send_validate_email.defaults.module = g

routes.reset_password.route = "/g/auth/resetpassword/*"
routes.reset_password.defaults.controller = auth
routes.reset_password.defaults.action = resetpassword
routes.reset_password.defaults.module = g

routes.forgot_password.route = "/g/auth/forgotpassword/*"
routes.forgot_password.defaults.controller = auth
routes.forgot_password.defaults.action = forgotpassword
routes.forgot_password.defaults.module = g

routes.auth_login_token_requested.route = "/g/auth/tokenrequested"
routes.auth_login_token_requested.defaults.controller = auth
routes.auth_login_token_requested.defaults.action = tokenrequested
routes.auth_login_token_requested.defaults.module = g

routes.admin.route = "/admin"
routes.admin.defaults.controller = content
routes.admin.defaults.action = admin
routes.admin.defaults.module = g

routes.imagebrowser.route = "/admin/imagebrowser"
routes.imagebrowser.defaults.controller = content
routes.imagebrowser.defaults.action = imagebrowser
routes.imagebrowser.defaults.module = g

routes.images.route = "/images/:file/*"
routes.images.defaults.controller = images
routes.images.defaults.module = g
routes.images.defaults.action = view
routes.images.defaults.file = ""

routes.s3fallbackroutes.route = "/g/images/s3fallback"
routes.s3fallbackroutes.defaults.controller = images
routes.s3fallbackroutes.defaults.action = s3fallback
routes.s3fallbackroutes.defaults.module = g

routes.upload.route = "/g/content/upload/type/:type"
routes.upload.defaults.controller = content
routes.upload.defaults.module = g
routes.upload.defaults.action = upload

routes.download.route = "/g/content/download/:file/:downloadType/:uploadOrStatic"
routes.download.defaults.controller = content
routes.download.defaults.module = g
routes.download.defaults.action = download
routes.download.defaults.downloadType =
routes.download.defaults.uploadOrStatic =

routes.browsebox.route = "/g/browsebox/:id/:chunk/:conditions"
routes.browsebox.defaults.module = g
routes.browsebox.defaults.controller = browsebox
routes.browsebox.defaults.action = index
routes.browsebox.defaults.conditions = ""

routes.ext.route = "/g/ext/:action/"
routes.ext.defaults.controller = ext
routes.ext.defaults.module = g

routes.opcache_reset.route = "/g/content/opcachereset"
routes.opcache_reset.defaults.controller = content
routes.opcache_reset.defaults.action = opcachereset
routes.opcache_reset.defaults.module = g

routes.content.route = "/g/content/:action"
routes.content.defaults.controller = content
routes.content.defaults.action = index
routes.content.defaults.module = g

routes.export.route = "/g/content/export/*"
routes.export.defaults.controller = content
routes.export.defaults.action = export
routes.export.defaults.module = g

routes.import.route = "/g/content/import/*"
routes.import.defaults.controller = content
routes.import.defaults.action = import
routes.import.defaults.module = g

routes.cookie_info.route = "/g/content/cookies"
routes.cookie_info.defaults.controller = content
routes.cookie_info.defaults.action = cookies
routes.cookie_info.defaults.module = g

routes.robotstxt.route = "/robots.txt"
routes.robotstxt.defaults.controller = robots
routes.robotstxt.defaults.action = index
routes.robotstxt.defaults.module = g

; REST API
routes.rest.route = "/g/content/api/v1/:datatype/:id/:relatedType/:relatedId/*"
routes.rest.defaults.module = g
routes.rest.defaults.controller = rest
routes.rest.defaults.action = api
routes.rest.defaults.datatype = null
routes.rest.defaults.id = null
routes.rest.defaults.relatedType = null
routes.rest.defaults.relatedId = null

[staging : production]
[integration : staging]
[development : integration]
[testing : development]
